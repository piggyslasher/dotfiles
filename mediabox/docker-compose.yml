version: "3.2"
services:
  portainer:
    container_name: portainer
    image: portainer/portainer
    command: -H unix:///var/run/docker.sock
    restart: always
    ports:
      - 9000:9000
      - 8000:8000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${MOUNT_POINT}/config/portainer:/data
  transmission:
    container_name: transmission
    volumes:
      - '${MOUNT_POINT_TRANSMISSION}:/data'
      - '/etc/localtime:/etc/localtime:ro'
    cap_add:
      - NET_ADMIN
    environment:
      - CREATE_TUN_DEVICE=true
      - OPENVPN_PROVIDER=PROTONVPN
      - OPENVPN_CONFIG=CA\
      - OPENVPN_USERNAME=${VPN_USERNAME}
      - OPENVPN_PASSWORD=${VPN_PASSWORD}
      - WEBPROXY_ENABLED=false
      - LOCAL_NETWORK=192.168.0.0/16
    ports:
      - 9091:9091 # Transmission
      - 7878:7878 # Radarr
      - 9117:9117 # Jackett
      - 8989:8989 # Radarr
      - 8686:8686 # Lidarr
      - 8085:8085 # HTPC Manager
    image: 'haugene/transmission-openvpn:latest-armhf'
    restart: unless-stopped
  radarr:
    image: linuxserver/radarr
    container_name: radarr
    restart: always
    network_mode: service:transmission
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    volumes:
      - ${MOUNT_POINT_TRANSMISSION}:/data:cached
      - ${MOUNT_POINT}/config/radarr:/config
      - ${MOUNT_POINT_TRANSMISSION}/completed:/downloads:cached
      - ${MOUNT_POINT_MOVIES}:/movies:cached
    restart: always
  jackett:
    image: linuxserver/jackett
    container_name: jackett
    restart: always
    network_mode: service:transmission
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    volumes:
      - ${MOUNT_POINT}/config/jackett/:/config
      - ${MOUNT_POINT}/data/jackett/blackhole/:/downloads
    restart: unless-stopped
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    restart: always
    network_mode: service:transmission
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    volumes:
      - ${MOUNT_POINT}/config/sonarr:/config
      - ${MOUNT_POINT_TV}:/tv:cached
      - ${MOUNT_POINT_TRANSMISSION}/completed:/downloads:cached
      - ${MOUNT_POINT_TRANSMISSION}:/data:cached
    restart: unless-stopped
  emby:
    image: emby/embyserver_arm32v7
    container_name: emby
    environment:
      - UID=1000
      - GID=100
      - GIDLIST=100,44
    # devices:
      # - /dev/dri/renderD128
    networks:
      - plexnet
    volumes:
      - ${MOUNT_POINT}/config/emby:/config:cached
      - ${MOUNT_POINT_MOVIES}:/movies:cached
      - ${MOUNT_POINT_TV}:/tv:cached
    ports:
      - 8096:8096
      - 8920:8920
    restart: unless-stopped
  bazarr:
    image: linuxserver/bazarr
    container_name: bazarr
    networks:
      - plexnet
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - plexnet
    volumes:
      - ${MOUNT_POINT}/config/bazarr:/config:cached
      - ${MOUNT_POINT_MOVIES}:/movies:cached
      - ${MOUNT_POINT_TV}:/tv:cached
    ports:
      - 6767:6767
    deploy:
      resources:
        limits:
          memory: 4096M
    restart: unless-stopped
  daapd:
    image: linuxserver/daapd
    container_name: daapd
    network_mode: host
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${MOUNT_POINT}/config/daapd:/config:cached
      - ${MOUNT_POINT_MUSIC}:/music:cached
    restart: unless-stopped
  # lidarr:
  #   image: linuxserver/lidarr
  #   container_name: lidarr
  #   network_mode: service:transmission
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TZ}
  #     - UMASK_SET=022 #optional
  #   volumes:
  #     - ${MOUNT_POINT}/config/lidarr:/config
  #     - ${MOUNT_POINT_MUSIC}:/music
  #     - ${MOUNT_POINT_DOWNLOADS}/data/lidarr/downloads:/downloads
  #   restart: unless-stopped
  htpcmanager:
    image: linuxserver/htpcmanager
    container_name: htpcmanager
    network_mode: service:transmission
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${MOUNT_POINT}/config/htpcmanager:/config
    restart: unless-stopped
  soulseek:
    container_name: soulseek
    restart: always
    volumes:
      - ${MOUNT_POINT}/config/soulseek:/data/.SoulseekQt
      - ${MOUNT_POINT_UNSORTED}/music:/data/Soulseek Downloads
      - ${MOUNT_POINT_DOWNLOADS}/data/soulseek/logs:/data/Soulseek Chat Logs
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - resize=scale
      - resolution=1280x720
    ports:
      - '6080:6080'
    image: realies/soulseek
networks:
  plexnet:
    driver: bridge

