version: "3.2"
services:
  portainer:
    container_name: portainer
    image: portainer/portainer
    command: -H unix:///var/run/docker.sock
    restart: always
    ports:
      - 9000:9000
      - 8000:8000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${MOUNT_POINT_CONFIG}/portainer:/data
  transmission:
    container_name: transmission
    volumes:
      - '${MOUNT_POINT_TRANSMISSION}:/data'
      - '/etc/localtime:/etc/localtime:ro'
    cap_add:
      - NET_ADMIN
    environment:
      - CREATE_TUN_DEVICE=true
      - OPENVPN_PROVIDER=PROTONVPN
      - OPENVPN_CONFIG=CA\
      - OPENVPN_USERNAME=${VPN_USERNAME}
      - OPENVPN_PASSWORD=${VPN_PASSWORD}
      - WEBPROXY_ENABLED=false
      - LOCAL_NETWORK=192.168.0.0/16
    ports:
      - 9091:9091 # Transmission
      - 7878:7878 # Radarr
      - 9117:9117 # Jackett
      - 8989:8989 # Radarr
      - 8686:8686 # Lidarr
      - 8085:8085 # HTPC Manager
      - 6767:6767 # Bazaar
      - 5299:5299 # LazyLibrarian
    image: 'haugene/transmission-openvpn:latest-armhf'
    restart: unless-stopped
  radarr:
    image: linuxserver/radarr
    container_name: radarr
    restart: always
    network_mode: service:transmission
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    volumes:
      - ${MOUNT_POINT_TRANSMISSION}:/data:cached
      - ${MOUNT_POINT_CONFIG}/radarr:/config
      - ${MOUNT_POINT_TRANSMISSION}/completed:/downloads:cached
      - ${MOUNT_POINT_MOVIES}:/movies:cached
    restart: always
  jackett:
    image: linuxserver/jackett
    container_name: jackett
    restart: always
    network_mode: service:transmission
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    volumes:
      - ${MOUNT_POINT_CONFIG}/jackett/:/config
      - ${MOUNT_POINT}/data/jackett/blackhole/:/downloads
    restart: unless-stopped
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    restart: always
    network_mode: service:transmission
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    volumes:
      - ${MOUNT_POINT_CONFIG}/sonarr:/config
      - ${MOUNT_POINT_TV}:/tv:cached
      - ${MOUNT_POINT_TRANSMISSION}/completed:/downloads:cached
      - ${MOUNT_POINT_TRANSMISSION}:/data:cached
    restart: unless-stopped
    # emby:
    #   image: linuxserver/emby:beta
    #   container_name: emby
    #   environment:
    #     - UID=1000
    #     - GID=1000
    #     - GIDLIST=100,44
    #     - UMASK_SET=022
    #     - PGID=${PGID}
    #     - PUID=${PUID}
    #     - TZ=${TZ}
    #   devices:
    #     - /dev/vchiq:/dev/vchiq
    #   network_mode: host
    #   volumes:
    #     - /opt/vc/lib:/opt/vc/lib
    #     - ${MOUNT_POINT_CONFIG}/emby:/config:cached
    #     - ${MOUNT_POINT_MOVIES}:/movies:cached
    #     - ${MOUNT_POINT_TV}:/tv:cached
    #     - ${MOUNT_POINT_BOOKS}:/books:cached
    #     - /dev/shm:/config/data/transcoding-temp/transcodes
    #   ports:
    #     - 8097:8097
    #     - 8920:8920
    #   restart: unless-stopped
  jellyfin:
    image: linuxserver/jellyfin:arm32v7-latest
    container_name: jellyfin
    environment:
      - UID=1000
      - GID=100
      - GIDLIST=100,44
      - UMASK_SET=022
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    devices:
      - /dev/vchiq:/dev/vchiq
    network_mode: host
    volumes:
      - /opt/vc/lib:/opt/vc/lib
      - ${MOUNT_POINT_CONFIG}/jellyfin:/config:cached
      - ${MOUNT_POINT_MUSIC}:/music:cached
      - ${MOUNT_POINT_MOVIES}:/movies:cached
      - ${MOUNT_POINT_TV}:/tv:cached
      - ${MOUNT_POINT_BOOKS}:/books:cached
      - /dev/shm:/config/data/transcoding-temp/transcodes
    ports:
      - 8096:8096
      - 8920:8920
    restart: unless-stopped
  bazarr:
    image: linuxserver/bazarr
    container_name: bazarr
    network_mode: service:transmission
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${MOUNT_POINT_CONFIG}/bazarr:/config:cached
      - ${MOUNT_POINT_MOVIES}:/movies:cached
      - ${MOUNT_POINT_TV}:/tv:cached
    deploy:
      resources:
        limits:
          memory: 4096M
    restart: unless-stopped
  htpcmanager:
    image: linuxserver/htpcmanager
    container_name: htpcmanager
    network_mode: service:transmission
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${MOUNT_POINT_CONFIG}/htpcmanager:/config
    restart: unless-stopped
  gostatic:
    container_name: web
    ports:
        - 80:8043
    volumes:
        - ./www:/srv/http
    image: pierrezemb/gostatic:latest-arm7
    networks:
      - plexnet
    restart: unless-stopped
  freedns:
    build:
      context: freedns-docker
      dockerfile: Dockerfile
    image: freedns
    restart: always
  watchtower:
    image: v2tec/watchtower
    container_name: watchtower_media-stack
    volumes:
        - /var/run/docker.sock:/var/run/docker.sock
    command: sonarr radarr transmission jackett jellyfin emby watchtower_media-stack -s "0 0 3 ? * *" --cleanup
    env_file: ./.env
    restart: unless-stopped
  # nicotine:
  #   build:
  #     context: nicotine-docker
  #     dockerfile: Dockerfile
  #   environment:
  #     - pgid=${PUID}
  #     - puid=${PGID}
  #     - resize=scale
  #     - resolution=1280x720
  #   ports:
  #     - 6080:6080
  #   volumes:
  #     - ${MOUNT_POINT_CONFIG}/nicotine:/root/.nicotine
  #     - ${MOUNT_POINT_DATA}/nicotine:/root/nicotine_downloads
  #     - ${MOUNT_POINT_MUSIC}:/root/nicotine_uploads
  #rclone:
  #  container_name: rclone
  #  image: wiserain/rclone
  #  restart: always
  #  network_mode: "bridge"
  #  volumes:
  #    - ${MOUNT_POINT_CONFIG}/rclone/config:/config
  #    - ${MOUNT_POINT_DATA}/rclone/log:/log
  #    - ${MOUNT_POINT_DATA}/rclone/cache:/cache
  #    - ${MOUNT_POINT_MUSIC}:/data:shared
  #  privileged: true
  #  devices:
  #    - /dev/fuse
  #  cap_add:
  #    - MKNOD
  #    - SYS_ADMIN
  #  environment:
  #    - PUID=${PUID}
  #    - PGID=${PGID}
  #    - TZ=${TZ}
  #    - RCLONE_REMOTE_PATH=GDrive:Meuzeek
networks:
  plexnet:
    driver: bridge

